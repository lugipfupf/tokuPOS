/*
 * Copyright (C) 2016 Beat Luginbühl <lugi@lugipfupf.ch>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package com.openbravo.pos.panels;

import com.openbravo.basic.BasicException;
import com.openbravo.pos.forms.AppView;
import com.openbravo.pos.forms.BeanFactoryApp;
import com.openbravo.pos.forms.BeanFactoryException;
import com.openbravo.pos.forms.JPanelView;
import com.openbravo.pos.imports.JPanelCSVFileChooser;
import javax.swing.JComponent;
import javax.swing.JPanel;

/**
 *
 * @author Beat Luginbühl <lugi@lugipfupf.ch>
 */
public abstract class JPanelImporter extends javax.swing.JPanel implements JPanelView, BeanFactoryApp {
    protected AppView appView;
    protected JPanelCSVFileChooser fileChooserPanel;
    
    protected JPanel fieldConfigurator;
    
    /**
     * Creates new form JPanelImporter
     */
    public JPanelImporter() {
        initComponents();
    }

    @Override
    public void init(AppView app) throws BeanFactoryException {
        this.appView = app;
        this.fileChooserPanel = new JPanelCSVFileChooser();
    }

    @Override
    public void activate() throws BasicException {
        this.fileChooserPanel.applyComponentOrientation(getComponentOrientation());
        this.fieldConfigurator.applyComponentOrientation(getComponentOrientation());
        this.toolbar.add(this.fileChooserPanel);
        this.container.add(this.fieldConfigurator, java.awt.BorderLayout.CENTER);
    }

    @Override
    public boolean deactivate() {
        return true;
    }

    @Override
    public JComponent getComponent() {
        return this;
    }

    @Override
    public Object getBean() {
        return this;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        container = new javax.swing.JPanel();
        toolbar = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        container.setLayout(new java.awt.BorderLayout());
        container.add(toolbar, java.awt.BorderLayout.NORTH);

        add(container, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel container;
    private javax.swing.JPanel toolbar;
    // End of variables declaration//GEN-END:variables
}
